<Page x:Class="WeatherAppUwp.Views.MainPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:behaviors="using:Template10.Behaviors"
      xmlns:core="using:Microsoft.Xaml.Interactions.Core"
      xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
      xmlns:controls="using:Template10.Controls"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:vm="using:WeatherAppUwp.ViewModels"
      xmlns:data="using:WeatherAppUwp.Models"
      xmlns:pullreq="using:AmazingPullToRefresh.Controls"
      xmlns:converters1="using:Template10.Converters"
      mc:Ignorable="d">

    <Page.Resources>
        <converters1:StringFormatConverter x:Key="StringFormatConverter" Format="{}{0:0°}"/>
    </Page.Resources>
    <Page.DataContext>
        <vm:MainPageViewModel x:Name="ViewModel" />
    </Page.DataContext>
    <RelativePanel Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="AdaptiveVisualStateGroup">
                <VisualState x:Name="VisualStateNarrow">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource NarrowMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!--  TODO: change properties for narrow view  -->
                        <Setter Target="stateTextBox.Text" Value="Narrow Visual State" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="VisualStateNormal">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource NormalMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!--  TODO: change properties for normal view  -->
                        <Setter Target="stateTextBox.Text" Value="Normal Visual State" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="VisualStateWide">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource WideMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!--  TODO: change properties for wide view  -->
                        <Setter Target="stateTextBox.Text" Value="Wide Visual State" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        
        <controls:PageHeader x:Name="pageHeader"
                             Background="Transparent"
                             Foreground="Black"
                             RelativePanel.AlignLeftWithPanel="True"
                             RelativePanel.AlignRightWithPanel="True"
                             RelativePanel.AlignTopWithPanel="True"
                             Text="Forecast">
            <interactivity:Interaction.Behaviors>
                <behaviors:EllipsisBehavior Visibility="Collapsed"/>
            </interactivity:Interaction.Behaviors>
            <controls:PageHeader.PrimaryCommands>
                <AppBarButton
                    Icon="Zoom"
                     Label="Search city">
                <FlyoutBase.AttachedFlyout>
                    <Flyout>
                        <RelativePanel>
                                <AutoSuggestBox
                                    Header="Type city name here"
                                    x:Name="parameterResizer"
                                    Text="{Binding Query, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    ItemsSource="{Binding Cities, Mode=TwoWay}">
                                    <interactivity:Interaction.Behaviors>
                                        <behaviors:KeyBehavior Key="Enter">
                                            <core:CallMethodAction MethodName="AddCity" TargetObject="{Binding}" />
                                        </behaviors:KeyBehavior>
                                    </interactivity:Interaction.Behaviors>
                                </AutoSuggestBox>
                                <Button x:Name="submitButton"
                                    Click="{x:Bind ViewModel.AddCity}"
                                    Content="Add"
                                    RelativePanel.AlignBottomWith="parameterResizer"
                                    RelativePanel.RightOf="parameterResizer" />
                            </RelativePanel>
                    </Flyout>
                </FlyoutBase.AttachedFlyout>
                    <interactivity:Interaction.Behaviors>
                        <core:EventTriggerBehavior EventName="Tapped">
                            <behaviors:OpenFlyoutAction/>
                        </core:EventTriggerBehavior>
                    </interactivity:Interaction.Behaviors>
                </AppBarButton>
                <AppBarButton 
                    Icon="Sync"
                    Click="{x:Bind ViewModel.RefreshAll}" Label="Privacy" />
            </controls:PageHeader.PrimaryCommands>
            <!--  secondary commands  -->
            <controls:PageHeader.SecondaryCommands>
                <AppBarButton Click="{x:Bind ViewModel.GotoSettings}" Label="Settings" />
                <AppBarButton Click="{x:Bind ViewModel.GotoPrivacy}" Label="Privacy" />
                <AppBarButton Click="{x:Bind ViewModel.GotoAbout}" Label="About" />
            </controls:PageHeader.SecondaryCommands>

        </controls:PageHeader>

        <RelativePanel EntranceNavigationTransitionInfo.IsTargetElement="True"
                       RelativePanel.AlignBottomWithPanel="True"
                       RelativePanel.AlignLeftWithPanel="True"
                       RelativePanel.AlignRightWithPanel="True"
                       RelativePanel.Below="pageHeader">

           
            

            <TextBlock x:Name="stateTextBox"
                       Margin="16,16,0,0"
                       Visibility="Collapsed"
                       Text="Current Visual State" />
            <GridView
                x:Name="MainGrid"
                RelativePanel.AlignRightWithPanel="True"
                RelativePanel.AlignLeftWithPanel="True"
                RelativePanel.AlignBottomWithPanel="True"
                Padding="3"
                SelectionMode="None"
                ItemsSource="{Binding Items}"
                RelativePanel.Below="stateTextBox">
                <pullreq:PullToRefreshAdorner.Extender>
                    <pullreq:PullToRefreshExtender RefreshRequested="{x:Bind ViewModel.RefreshAll}" />
                </pullreq:PullToRefreshAdorner.Extender>
                <GridView.ItemContainerStyle>
                    <Style TargetType="GridViewItem">
                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                    </Style>
                </GridView.ItemContainerStyle>
                <GridView.ItemTemplate>
                    <DataTemplate x:DataType="data:ForecastItem">
                        <Border 
                            Background="Transparent"
                            MinWidth="170"
                            Height="110"
                            BorderBrush="LightGray"
                            Padding="3"
                            BorderThickness="1">
                            <FlyoutBase.AttachedFlyout>
                                <MenuFlyout>
                                    <MenuFlyoutItem 
                                            Command="{Binding RestartCommand}"
                                            Text="Refresh"/>
                                    <MenuFlyoutItem 
                                            Visibility="{Binding Pinned, 
                                                Mode=TwoWay,        
                                                Converter={StaticResource InvertedFromBool}}"
                                            Command="{Binding PinCommand}"
                                            Text="Pin"/>
                                    <MenuFlyoutItem 
                                            Visibility="{Binding Pinned, 
                                                Mode=TwoWay,        
                                                Converter={StaticResource FromBool}}"
                                            Command="{Binding UnPinCommand}"
                                            Text="Unpin"/>
                                    <MenuFlyoutItem 
                                            Command="{Binding DataContext.RemoveCommand,
                                            ElementName=MainGrid}"
                                            CommandParameter="{Binding}"
                                            Text="Remove" />
                                </MenuFlyout>
                            </FlyoutBase.AttachedFlyout>
                            <interactivity:Interaction.Behaviors>
                                <core:EventTriggerBehavior EventName="RightTapped">
                                    <behaviors:OpenFlyoutAction/>
                                </core:EventTriggerBehavior>
                            </interactivity:Interaction.Behaviors>
                            <RelativePanel >
                                <Button
                                    Command="{Binding RestartCommand}"
                                    Background="Transparent"
                                    Height="30"
                                    Width="30"
                                    Padding="-3"
                                    
                                    RelativePanel.AlignVerticalCenterWithPanel="True"
                                    Visibility="{Binding Error, 
                                        Converter={StaticResource FromBool}}"
                                    >
                                    <SymbolIcon x:Name="play" Symbol="Sync"/>
                                </Button>

                                <ProgressRing
                                    RelativePanel.AlignVerticalCenterWithPanel="True"
                                    IsActive="{Binding Loading, Mode=TwoWay}"
                                    Visibility="{Binding Loading, Converter={StaticResource FromBool}}"
                                    Height="30"
                                    Width="30"
                                    />
                                <SymbolIcon
                                    Visibility="{Binding Pinned, Converter={StaticResource FromBool}}"
                                    Height="20"
                                    Width="20"
                                    Symbol="Favorite"
                                    RelativePanel.AlignTopWith="celsiusBlock"
                                    RelativePanel.AlignRightWithPanel="True"/>
                                
                                <TextBlock 
                                    x:Name="placeBlock"
                                    RelativePanel.AlignHorizontalCenterWithPanel="True"
                                    Text="{Binding Place }"/>
                                <TextBlock 
                                    x:Name="degreeBlock"
                                    RelativePanel.AlignHorizontalCenterWithPanel="True"
                                    RelativePanel.Below="placeBlock"
                                    HorizontalAlignment="Center"
                                    FontSize="40"
                                    Text="{Binding Degrees, 
                                        Converter={StaticResource StringFormatConverter}}"
                                    />
                                <TextBlock 
                                    x:Name="celsiusBlock"
                                    RelativePanel.RightOf="degreeBlock"
                                    RelativePanel.AlignTopWith="degreeBlock"
                                    Text="C"/>
                                <Image 
                                    RelativePanel.RightOf="celsiusBlock"
                                    RelativePanel.AlignBottomWith="degreeBlock"
                                    Height="30"
                                    Width="30"
                                    Source="{Binding ImageUrl}"/>
                                <TextBlock 
                                    x:Name="conditionBlock"
                                    RelativePanel.Below="degreeBlock"
                                    RelativePanel.AlignHorizontalCenterWithPanel="True"
                                    HorizontalAlignment="Center"
                                    FontSize="19"
                                    Text="{Binding Condition}"/>
                            </RelativePanel>
                        </Border>
                    </DataTemplate>
                </GridView.ItemTemplate>
            </GridView>
        </RelativePanel>

    </RelativePanel>
</Page>

